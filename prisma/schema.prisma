generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  ext_expires_in    Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  admin         Boolean   @default(false)
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model ClientCookies {
  id       String   @id @default(cuid())
  nickname String?
  token    String   @unique
  expires  DateTime @default(now())
  office   Offices? @relation(fields: [officeId], references: [id], onDelete: Cascade)
  officeId String?
}

model Offices {
  id                  String          @id @default(cuid())
  name                String
  address             String
  city                String
  postcode            String
  country             String
  ClientCookies       ClientCookies[]
  SelectedNewsSources newsQuery[]
  salesData           salesData[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model itMessage {
  id        String   @id @default(cuid())
  title     String
  message   String
  createdAt DateTime @default(now())
  beginsAt  DateTime @default(now())
  endsAt    DateTime @default(now())
  contact   String   @default("it@theshoregroup.co.uk")
}

model newsQuery {
  id             String   @id @default(cuid())
  query          String?
  description    String?
  endpoint       String
  language       String   @default("en")
  lastSync       DateTime @default(now())
  isGlobalSource Boolean  @default(false)
  lastSyncResult String   @default("new")
  // Optional fields
  country        String?
  domains        String?
  exDomains      String?
  sources        String?
  // Date
  from           String?
  // Connected to Office
  officeId       String?
  office         Offices? @relation(fields: [officeId], references: [id], onDelete: Cascade)
}

model salesData {
  id       String   @id @default(cuid())
  officeId String?
  office   Offices? @relation(fields: [officeId], references: [id], onDelete: Cascade)

}
